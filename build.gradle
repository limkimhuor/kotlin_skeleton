version '1.0.0-SNAPSHOT'

buildscript {
    ext {
        kotlin_version = '1.2.30'
        kotlinx_coroutines = '0.22.5'
        spring_boot_version = '1.5.10.RELEASE'
        thymeleaf_springsecurity_version = '3.0.2.RELEASE'
        thymeleaf_java8time_version = '3.0.0.RELEASE'
        mybatis_version = '1.3.1'
        guava_version = '24.0-jre'
        mariadb_jdbc_version = '2.2.2'
        okhttp_version = '3.9.1'
        univocity_parsers_version = '2.5.9'
        jackson_version = '2.9.4'
        jetbrains_annotations_version = '15.0'
        commons_io_version = '2.6'
        commons_math3_version = '3.6.1'
        commons_lang3_version = '3.7'
        validator_collection_version = '2.2.0'
        webjars_locator_version = '0.32-1'
        junit_jupiter_version = '5.0.3'
    }

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
    }
}

subprojects {
    ext['jackson.version'] = jackson_version

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'kotlin-noarg'
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
            allWarningsAsErrors = true
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
            allWarningsAsErrors = true
        }
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}